<UserControl x:Class="DANCustomTools.Views.PropertiesEditorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:converters="clr-namespace:DANCustomTools.Converters"
             xmlns:tc="clr-namespace:TechnoControls.XMLPropertyGrid;assembly=TechnoControls"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="400">

    <UserControl.Resources>
        <!-- Boolean to Visibility Converter -->
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        <!-- Inverted Boolean to Visibility Converter -->
        <Style x:Key="InvertedVisibilityStyle" TargetType="FrameworkElement">
            <Setter Property="Visibility" Value="Visible"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding HasData}" Value="True">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Modern Button Style -->
        <Style x:Key="ModernButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#f8f9fa"/>
            <Setter Property="BorderBrush" Value="#dee2e6"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#e9ecef"/>
                                <Setter Property="BorderBrush" Value="#adb5bd"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#dee2e6"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#f8f9fa"/>
                                <Setter Property="Foreground" Value="#6c757d"/>
                                <Setter Property="BorderBrush" Value="#e9ecef"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TextBox Style -->
        <Style x:Key="XmlTextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#dee2e6"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="FontFamily" Value="Consolas,Monaco,monospace"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="AcceptsReturn" Value="True"/>
            <Setter Property="AcceptsTab" Value="True"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="TextWrapping" Value="NoWrap"/>
        </Style>

        <!-- Indentation converter for hierarchical rows -->
        <converters:IndentLevelToWidthConverter x:Key="IndentConverter"/>
    </UserControl.Resources>

    <Grid Background="#f5f5f5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <!-- Content -->
        <Border Grid.Row="2" Background="White" BorderBrush="#ddd" BorderThickness="1" Margin="4">
            <Grid>
                <!-- Empty State -->
                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center"
                           Style="{StaticResource InvertedVisibilityStyle}">
                    <TextBlock Text="ðŸŽ¯" FontSize="32" HorizontalAlignment="Center" Foreground="#ccc" Margin="0,0,0,8"/>
                    <TextBlock Text="Select an object in the Scene Tree to view its properties"
                              FontSize="12"
                              Foreground="#666"
                              HorizontalAlignment="Center"
                              TextWrapping="Wrap"
                              TextAlignment="Center"/>
                </StackPanel>

                <!-- Properties Content: host original WinForms XMLPropertyGrid for pixel-perfect parity -->
                <TabControl Visibility="{Binding HasData, Converter={StaticResource BooleanToVisibilityConverter}}"
                            Margin="0">
                    <TabItem Header="Properties">
                        <Grid x:Name="WinFormsHostContainer" />
                    </TabItem>
                    <TabItem Header="XML">
                        <ScrollViewer VerticalScrollBarVisibility="Auto"
                                      HorizontalScrollBarVisibility="Auto">
                            <TextBox Text="{Binding XmlDisplayText, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource XmlTextBoxStyle}"
                                    MinHeight="300"/>
                        </ScrollViewer>
                    </TabItem>
                </TabControl>
            </Grid>
        </Border>
    </Grid>
</UserControl>
